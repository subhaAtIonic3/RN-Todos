{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/subhrajyotichakraborty/Desktop/Work_Personal/JS/todos/src/screens/Notes.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport NotesViewer from \"../components/NotesViewer/NotesViewer\";\nimport QuickAction from \"../components/QuickAction/QuickAction\";\nvar DATA = [{\n  title: 'Notes #1',\n  showMenu: false,\n  _id: '1',\n  color: 'red'\n}, {\n  title: 'Notes #2',\n  showMenu: false,\n  color: 'green',\n  _id: '2'\n}, {\n  title: 'Complete task z02-718',\n  showMenu: false,\n  _id: '3',\n  color: 'red'\n}, {\n  title: 'Scrum call',\n  showMenu: false,\n  _id: '4',\n  color: 'green'\n}, {\n  title: 'Scrum call',\n  showMenu: false,\n  _id: '5',\n  color: 'orange'\n}, {\n  title: 'Scrum call',\n  showMenu: false,\n  _id: '6',\n  color: 'black'\n}, {\n  title: 'Scrum call',\n  showMenu: false,\n  _id: '7',\n  color: 'blue'\n}, {\n  title: 'Scrum call',\n  showMenu: false,\n  _id: '8',\n  color: 'orange'\n}, {\n  title: 'Scrum call',\n  showMenu: false,\n  _id: '9',\n  color: 'blue'\n}, {\n  title: 'Scrum call',\n  showMenu: false,\n  _id: '10',\n  color: 'orange'\n}];\n\nvar Notes = function (_Component) {\n  _inherits(Notes, _Component);\n\n  var _super = _createSuper(Notes);\n\n  function Notes(props) {\n    var _this;\n\n    _classCallCheck(this, Notes);\n\n    _this = _super.call(this, props);\n\n    _this.toggleAddTaskPopup = function () {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, _this.state), {}, {\n          togglePopup: !prevState.togglePopup\n        });\n      });\n    };\n\n    _this.popupItemClickHandler = function (type) {\n      var navigation = _this.props.navigation;\n\n      if (type === 'quickNote') {\n        navigation.navigate('CreateNotes');\n      } else {}\n\n      _this.setState(function (prevState) {\n        return {\n          togglePopup: !prevState.togglePopup\n        };\n      });\n    };\n\n    _this.state = {\n      togglePopup: false\n    };\n    return _this;\n  }\n\n  _createClass(Notes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      navigation.setOptions({\n        headerRight: function headerRight() {\n          return React.createElement(TouchableOpacity, {\n            onPress: _this2.toggleAddTaskPopup,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 9\n            }\n          }, React.createElement(View, {\n            style: {\n              paddingHorizontal: 15\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 11\n            }\n          }, React.createElement(MaterialIcons, {\n            name: \"playlist-add\",\n            size: 24,\n            color: \"white\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }\n          })));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.notesContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }, this.state.togglePopup ? React.createElement(QuickAction, {\n        isVisible: true,\n        clicked: this.popupItemClickHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }) : null, React.createElement(NotesViewer, {\n        listData: DATA,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Notes;\n}(Component);\n\nvar styles = StyleSheet.create({\n  notesContainer: {\n    paddingHorizontal: 15\n  }\n});\nexport default Notes;","map":{"version":3,"sources":["/Users/subhrajyotichakraborty/Desktop/Work_Personal/JS/todos/src/screens/Notes.js"],"names":["React","Component","MaterialIcons","NotesViewer","QuickAction","DATA","title","showMenu","_id","color","Notes","props","toggleAddTaskPopup","setState","prevState","state","togglePopup","popupItemClickHandler","type","navigation","navigate","setOptions","headerRight","paddingHorizontal","styles","notesContainer","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {View, Text, StyleSheet, TouchableOpacity} from 'react-native';\n\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\n\nimport NotesViewer from '../components/NotesViewer/NotesViewer';\nimport QuickAction from '../components/QuickAction/QuickAction';\n\nconst DATA = [\n  {\n    title: 'Notes #1',\n    showMenu: false,\n    _id: '1',\n    color: 'red',\n  },\n  {\n    title: 'Notes #2',\n    showMenu: false,\n    color: 'green',\n    _id: '2',\n  },\n  {\n    title: 'Complete task z02-718',\n    showMenu: false,\n    _id: '3',\n    color: 'red',\n  },\n  {\n    title: 'Scrum call',\n    showMenu: false,\n    _id: '4',\n    color: 'green',\n  },\n  {\n    title: 'Scrum call',\n    showMenu: false,\n    _id: '5',\n    color: 'orange',\n  },\n  {\n    title: 'Scrum call',\n    showMenu: false,\n    _id: '6',\n    color: 'black',\n  },\n  {\n    title: 'Scrum call',\n    showMenu: false,\n    _id: '7',\n    color: 'blue',\n  },\n  {\n    title: 'Scrum call',\n    showMenu: false,\n    _id: '8',\n    color: 'orange',\n  },\n  {\n    title: 'Scrum call',\n    showMenu: false,\n    _id: '9',\n    color: 'blue',\n  },\n  {\n    title: 'Scrum call',\n    showMenu: false,\n    _id: '10',\n    color: 'orange',\n  },\n];\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      togglePopup: false,\n    };\n  }\n\n  componentDidMount() {\n    const {navigation} = this.props;\n    navigation.setOptions({\n      headerRight: () => (\n        <TouchableOpacity onPress={this.toggleAddTaskPopup}>\n          <View\n            style={{\n              paddingHorizontal: 15,\n            }}>\n            <MaterialIcons name=\"playlist-add\" size={24} color=\"white\" />\n          </View>\n        </TouchableOpacity>\n      ),\n    });\n  }\n\n  toggleAddTaskPopup = () => {\n    this.setState(prevState => ({\n      ...this.state,\n      togglePopup: !prevState.togglePopup,\n    }));\n  };\n\n  popupItemClickHandler = type => {\n    const {navigation} = this.props;\n    if (type === 'quickNote') {\n      // go to quick notes screen\n      navigation.navigate('CreateNotes');\n    } else {\n      // go tot create task screen\n    }\n    this.setState(prevState => ({\n      togglePopup: !prevState.togglePopup,\n    }));\n  };\n\n  render() {\n    return (\n      <View style={styles.notesContainer}>\n        {this.state.togglePopup ? (\n          <QuickAction isVisible={true} clicked={this.popupItemClickHandler} />\n        ) : null}\n        <NotesViewer listData={DATA} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  notesContainer: {\n    paddingHorizontal: 15,\n  },\n});\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}