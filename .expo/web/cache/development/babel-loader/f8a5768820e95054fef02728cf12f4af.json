{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/subhrajyotichakraborty/Desktop/Work_Personal/JS/todos/src/screens/Profile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport UserAvatar from 'react-native-user-avatar';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport ProgressCircle from 'react-native-progress-circle';\nimport TaskTile from \"../components/TaskTile/TaskTile\";\nvar DATA = [{\n  name: 'Total Task',\n  number: 190,\n  color: 'rgb(255, 79, 82)',\n  percentage: 60\n}, {\n  name: 'To Do Task',\n  number: 5,\n  color: 'rgb(103, 98, 255)',\n  percentage: 90\n}, {\n  name: 'Quick Notes',\n  number: 20,\n  color: 'rgb(146, 65, 255)'\n}];\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      tilesData: DATA\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.userInfoContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, React.createElement(FontAwesome, {\n        name: \"gear\",\n        size: 24,\n        color: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.userInfoCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.profilePicture,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, React.createElement(UserAvatar, {\n        size: 70,\n        name: \"Dany Barbosa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.userNameContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.userName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, \"Dany Barbosa\"), React.createElement(Text, {\n        style: styles.userEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, \"danny.8q1@fly.com\"))), React.createElement(View, {\n        style: styles.taskDetailsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.tasksDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.tasksText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \"120\"), React.createElement(Text, {\n        style: styles.tasksLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, \"Create Tasks\")), React.createElement(View, {\n        styles: styles.tasksDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.tasksText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, \"80\"), React.createElement(Text, {\n        style: styles.tasksLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, \"Completed Tasks\")))), React.createElement(ScrollView, {\n        style: styles.taskTilesContainer,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, this.state.tilesData.map(function (tile) {\n        return React.createElement(TaskTile, {\n          key: tile.name,\n          taskName: tile.name,\n          taskNumber: tile.number,\n          bgColor: tile.color,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }\n        });\n      })), React.createElement(View, {\n        style: styles.statisticContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.sectionLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, \"Statistics\"), React.createElement(View, {\n        style: styles.progressCircleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, this.state.tilesData.map(function (tile) {\n        if (tile.percentage) {\n          return React.createElement(View, {\n            key: tile.name,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }\n          }, React.createElement(ProgressCircle, {\n            containerStyle: styles.progressCircle,\n            percent: tile.percentage,\n            radius: 30,\n            borderWidth: 3,\n            color: tile.color,\n            shadowColor: \"#ccc\",\n            bgColor: \"#fff\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 18\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 23\n            }\n          }, tile.percentage + \"%\")), React.createElement(Text, {\n            style: styles.progressCircleTaskName,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }\n          }, tile.name));\n        }\n\n        return null;\n      }))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 15,\n    marginVertical: 20\n  },\n  userInfoContainer: {\n    padding: 20,\n    backgroundColor: '#fff',\n    borderRadius: 3,\n    height: 175,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n    elevation: 4,\n    position: 'relative'\n  },\n  settings: {\n    position: 'absolute',\n    top: 10,\n    right: 10\n  },\n  userInfoCard: {\n    flexDirection: 'row'\n  },\n  profilePicture: {\n    height: 70,\n    width: 70\n  },\n  userNameContainer: {\n    marginHorizontal: 20,\n    flexDirection: 'column',\n    alignSelf: 'center'\n  },\n  userName: {\n    fontSize: 20\n  },\n  userEmail: {\n    fontSize: 16,\n    color: 'rgb(172, 172, 172)'\n  },\n  taskDetailsContainer: {\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    margin: 20\n  },\n  tasksDetails: {},\n  tasksText: {\n    fontSize: 20\n  },\n  tasksLabel: {\n    fontSize: 16,\n    color: 'rgb(172, 172, 172)'\n  },\n  taskTilesContainer: {\n    marginVertical: 20\n  },\n  statisticContainer: {\n    paddingVertical: 20,\n    paddingHorizontal: 25,\n    backgroundColor: '#fff',\n    borderRadius: 3,\n    height: 175,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n    elevation: 4\n  },\n  sectionLabel: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  progressCircleContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginVertical: 20\n  },\n  progressCircle: {},\n  progressCircleTaskName: {\n    marginTop: 5\n  }\n});\nexport default Profile;","map":{"version":3,"sources":["/Users/subhrajyotichakraborty/Desktop/Work_Personal/JS/todos/src/screens/Profile.js"],"names":["React","Component","UserAvatar","FontAwesome","ProgressCircle","TaskTile","DATA","name","number","color","percentage","Profile","props","state","tilesData","styles","container","userInfoContainer","settings","userInfoCard","profilePicture","userNameContainer","userName","userEmail","taskDetailsContainer","tasksDetails","tasksText","tasksLabel","taskTilesContainer","map","tile","statisticContainer","sectionLabel","progressCircleContainer","progressCircle","fontSize","progressCircleTaskName","StyleSheet","create","flex","paddingHorizontal","marginVertical","padding","backgroundColor","borderRadius","height","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","position","top","right","flexDirection","marginHorizontal","alignSelf","justifyContent","margin","paddingVertical","fontWeight","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n} from 'react-native';\n\nimport UserAvatar from 'react-native-user-avatar';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport ProgressCircle from 'react-native-progress-circle';\n\nimport TaskTile from '../components/TaskTile/TaskTile';\n\nconst DATA = [\n  {\n    name: 'Total Task',\n    number: 190,\n    color: 'rgb(255, 79, 82)',\n    percentage: 60,\n  },\n  {\n    name: 'To Do Task',\n    number: 5,\n    color: 'rgb(103, 98, 255)',\n    percentage: 90,\n  },\n  {\n    name: 'Quick Notes',\n    number: 20,\n    color: 'rgb(146, 65, 255)',\n  },\n];\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tilesData: DATA,\n    };\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.userInfoContainer}>\n          <TouchableOpacity style={styles.settings}>\n            <FontAwesome name=\"gear\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          <View style={styles.userInfoCard}>\n            <View style={styles.profilePicture}>\n              <UserAvatar size={70} name=\"Dany Barbosa\" />\n            </View>\n            <View style={styles.userNameContainer}>\n              <Text style={styles.userName}>Dany Barbosa</Text>\n              <Text style={styles.userEmail}>danny.8q1@fly.com</Text>\n            </View>\n          </View>\n          <View style={styles.taskDetailsContainer}>\n            <View style={styles.tasksDetails}>\n              <Text style={styles.tasksText}>120</Text>\n              <Text style={styles.tasksLabel}>Create Tasks</Text>\n            </View>\n            <View styles={styles.tasksDetails}>\n              <Text style={styles.tasksText}>80</Text>\n              <Text style={styles.tasksLabel}>Completed Tasks</Text>\n            </View>\n          </View>\n        </View>\n        <ScrollView\n          style={styles.taskTilesContainer}\n          horizontal\n          showsHorizontalScrollIndicator={false}>\n          {this.state.tilesData.map(tile => {\n            return (\n              <TaskTile\n                key={tile.name}\n                taskName={tile.name}\n                taskNumber={tile.number}\n                bgColor={tile.color}\n              />\n            );\n          })}\n        </ScrollView>\n        <View style={styles.statisticContainer}>\n          <Text style={styles.sectionLabel}>Statistics</Text>\n          <View style={styles.progressCircleContainer}>\n            {this.state.tilesData.map(tile => {\n              if (tile.percentage) {\n                return (\n                  <View key={tile.name}>\n                    <ProgressCircle\n                      containerStyle={styles.progressCircle}\n                      percent={tile.percentage}\n                      radius={30}\n                      borderWidth={3}\n                      color={tile.color}\n                      shadowColor=\"#ccc\"\n                      bgColor=\"#fff\">\n                      <Text style={{fontSize: 18}}>{`${tile.percentage}%`}</Text>\n                    </ProgressCircle>\n                    <Text style={styles.progressCircleTaskName}>{tile.name}</Text>\n                  </View>\n                );\n              }\n              return null;\n            })}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 15,\n    marginVertical: 20,\n  },\n  userInfoContainer: {\n    padding: 20,\n    backgroundColor: '#fff',\n    borderRadius: 3,\n    height: 175,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n\n    elevation: 4,\n    position: 'relative',\n  },\n  settings: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n  },\n  userInfoCard: {\n    flexDirection: 'row',\n  },\n  profilePicture: {\n    height: 70,\n    width: 70,\n  },\n  userNameContainer: {\n    marginHorizontal: 20,\n    flexDirection: 'column',\n    alignSelf: 'center',\n  },\n  userName: {\n    fontSize: 20,\n  },\n  userEmail: {\n    fontSize: 16,\n    color: 'rgb(172, 172, 172)',\n  },\n  taskDetailsContainer: {\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    margin: 20,\n  },\n  tasksDetails: {},\n  tasksText: {\n    fontSize: 20,\n  },\n  tasksLabel: {\n    fontSize: 16,\n    color: 'rgb(172, 172, 172)',\n  },\n  taskTilesContainer: {\n    marginVertical: 20,\n  },\n  statisticContainer: {\n    paddingVertical: 20,\n    paddingHorizontal: 25,\n    backgroundColor: '#fff',\n    borderRadius: 3,\n    height: 175,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n\n    elevation: 4,\n  },\n  sectionLabel: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  progressCircleContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginVertical: 20\n  },\n  progressCircle: {},\n  progressCircleTaskName: {\n    marginTop: 5\n  }\n});\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}