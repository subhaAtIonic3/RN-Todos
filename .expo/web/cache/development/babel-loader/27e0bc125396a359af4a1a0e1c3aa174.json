{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/subhrajyotichakraborty/Desktop/Work_Personal/JS/todos/src/screens/Tasks.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SegmentedControlTab from 'react-native-segmented-control-tab';\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { Calendar } from 'react-native-calendars';\nimport TaskViewer from \"../components/TaskViewer/TaskViewer\";\nimport QuickAction from \"../components/QuickAction/QuickAction\";\nvar DATA = [{\n  title: 'Meeting with Jerry',\n  time: '9:00 AM',\n  showMenu: false,\n  _id: '1'\n}, {\n  title: 'Code review',\n  time: '12:00 PM',\n  showMenu: false,\n  _id: '2'\n}, {\n  title: 'Complete task z02-718',\n  time: '4:30 PM',\n  showMenu: false,\n  _id: '3'\n}, {\n  title: 'Scrum call',\n  time: '6:00 PM',\n  showMenu: false,\n  _id: '4'\n}];\nvar vacation = {\n  key: 'vacation',\n  color: 'red',\n  selectedDotColor: 'blue'\n};\nvar massage = {\n  key: 'massage',\n  color: 'blue',\n  selectedDotColor: 'blue'\n};\nvar workout = {\n  key: 'workout',\n  color: 'green'\n};\n\nvar Tasks = function (_Component) {\n  _inherits(Tasks, _Component);\n\n  var _super = _createSuper(Tasks);\n\n  function Tasks(props) {\n    var _this;\n\n    _classCallCheck(this, Tasks);\n\n    _this = _super.call(this, props);\n\n    _this.toggleAddTaskPopup = function () {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, _this.state), {}, {\n          togglePopup: !prevState.togglePopup\n        });\n      });\n    };\n\n    _this.handleIndexChange = function (index) {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        selectedIndex: index\n      }));\n    };\n\n    _this.popupItemClickHandler = function (type) {\n      var navigation = _this.props.navigation;\n\n      if (type === \"quickNote\") {\n        navigation.navigate(\"Notes\", {\n          screen: \"CreateNotes\",\n          initial: false\n        });\n      } else {}\n\n      _this.setState(function (prevState) {\n        return {\n          togglePopup: !prevState.togglePopup\n        };\n      });\n    };\n\n    _this.state = {\n      selectedIndex: 0,\n      showMenu: false,\n      togglePopup: false\n    };\n    return _this;\n  }\n\n  _createClass(Tasks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      navigation.setOptions({\n        headerRight: function headerRight() {\n          return React.createElement(TouchableOpacity, {\n            onPress: _this2.toggleAddTaskPopup,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }\n          }, React.createElement(View, {\n            style: {\n              paddingHorizontal: 15\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }\n          }, React.createElement(MaterialIcons, {\n            name: \"playlist-add\",\n            size: 24,\n            color: \"white\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }\n          })));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, this.state.togglePopup ? React.createElement(QuickAction, {\n        isVisible: true,\n        clicked: this.popupItemClickHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }) : null, React.createElement(SegmentedControlTab, {\n        values: ['Today', 'Month'],\n        selectedIndex: this.state.selectedIndex,\n        onTabPress: this.handleIndexChange,\n        borderRadius: 0,\n        tabStyle: styles.tabStyle,\n        activeTabStyle: styles.activeTabStyle,\n        tabTextStyle: styles.tabTextStyle,\n        activeTabTextStyle: Platform.OS === 'ios' ? styles.activeTabTextStyle_iOS : styles.activeTabTextStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.listContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, this.state.selectedIndex === 0 ? React.createElement(TaskViewer, {\n        listData: DATA,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, React.createElement(Calendar, {\n        markedDates: {\n          '2020-05-25': {\n            dots: [vacation, massage, workout]\n          },\n          '2020-05-26': {\n            dots: [massage, workout]\n          }\n        },\n        markingType: 'multi-dot',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }]);\n\n  return Tasks;\n}(Component);\n\nvar styles = StyleSheet.create({\n  tabStyle: {\n    backgroundColor: 'rgb(255, 79, 82)',\n    borderColor: 'rgb(255, 79, 82)'\n  },\n  tabTextStyle: {\n    color: 'white',\n    padding: 10\n  },\n  activeTabStyle: {\n    backgroundColor: 'rgb(255, 79, 82)'\n  },\n  activeTabTextStyle: {\n    borderBottomWidth: 2,\n    borderBottomColor: '#fff'\n  },\n  activeTabTextStyle_iOS: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  listContainer: {\n    paddingBottom: 105,\n    paddingVertical: 10,\n    paddingHorizontal: 15\n  }\n});\nexport default Tasks;","map":{"version":3,"sources":["/Users/subhrajyotichakraborty/Desktop/Work_Personal/JS/todos/src/screens/Tasks.js"],"names":["React","Component","SegmentedControlTab","MaterialIcons","Calendar","TaskViewer","QuickAction","DATA","title","time","showMenu","_id","vacation","key","color","selectedDotColor","massage","workout","Tasks","props","toggleAddTaskPopup","setState","prevState","state","togglePopup","handleIndexChange","index","selectedIndex","popupItemClickHandler","type","navigation","navigate","screen","initial","setOptions","headerRight","paddingHorizontal","styles","tabStyle","activeTabStyle","tabTextStyle","Platform","OS","activeTabTextStyle_iOS","activeTabTextStyle","listContainer","dots","StyleSheet","create","backgroundColor","borderColor","padding","borderBottomWidth","borderBottomColor","fontSize","fontWeight","paddingBottom","paddingVertical"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  TouchableOpacity,\n} from 'react-native';\n\nimport SegmentedControlTab from 'react-native-segmented-control-tab';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport { Calendar } from 'react-native-calendars';\n\nimport TaskViewer from \"../components/TaskViewer/TaskViewer\";\nimport QuickAction from \"../components/QuickAction/QuickAction\";\n\nconst DATA = [\n  {\n    title: 'Meeting with Jerry',\n    time: '9:00 AM',\n    showMenu: false,\n    _id: '1',\n  },\n  {\n    title: 'Code review',\n    time: '12:00 PM',\n    showMenu: false,\n    _id: '2',\n  },\n  {\n    title: 'Complete task z02-718',\n    time: '4:30 PM',\n    showMenu: false,\n    _id: '3',\n  },\n  {\n    title: 'Scrum call',\n    time: '6:00 PM',\n    showMenu: false,\n    _id: '4',\n  }\n];\n\nconst vacation = {key: 'vacation', color: 'red', selectedDotColor: 'blue'};\nconst massage = {key: 'massage', color: 'blue', selectedDotColor: 'blue'};\nconst workout = {key: 'workout', color: 'green'};\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedIndex: 0,\n      showMenu: false,\n      togglePopup: false\n    };\n  }\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    navigation.setOptions({\n      headerRight: () => (\n        <TouchableOpacity onPress={this.toggleAddTaskPopup}>\n          <View style={{\n            paddingHorizontal: 15\n          }}>\n            <MaterialIcons name=\"playlist-add\" size={24} color=\"white\" />\n          </View>\n        </TouchableOpacity>\n      )\n    });\n  }\n\n  toggleAddTaskPopup = () => {\n    this.setState((prevState) => ({\n      ...this.state,\n      togglePopup: !prevState.togglePopup\n    }));\n  }\n\n  handleIndexChange = index => {\n    this.setState({\n      ...this.state,\n      selectedIndex: index,\n    });\n  };\n\n  popupItemClickHandler = (type) => {\n    const { navigation } = this.props;\n    if (type === \"quickNote\") {\n      // go to quick notes screen\n      navigation.navigate(\"Notes\", { screen: \"CreateNotes\", initial: false });\n    } else {\n      // go tot create task screen\n    }\n    this.setState((prevState) => ({\n      togglePopup: !prevState.togglePopup\n    }));\n  }\n\n  render() {\n    return (\n      <View>\n        {\n          this.state.togglePopup ?\n          <QuickAction isVisible={true} clicked={this.popupItemClickHandler} />\n          : null\n        }\n        <SegmentedControlTab\n          values={['Today', 'Month']}\n          selectedIndex={this.state.selectedIndex}\n          onTabPress={this.handleIndexChange}\n          borderRadius={0}\n          tabStyle={styles.tabStyle}\n          activeTabStyle={styles.activeTabStyle}\n          tabTextStyle={styles.tabTextStyle}\n          activeTabTextStyle={\n            Platform.OS === 'ios'\n              ? styles.activeTabTextStyle_iOS\n              : styles.activeTabTextStyle\n          }\n        />\n        <View style={styles.listContainer}>\n          {this.state.selectedIndex === 0 ? (\n              <TaskViewer listData={DATA} />\n          ) : (\n            <View>\n              <Calendar\n                markedDates={{\n                  '2020-05-25': {\n                    dots: [vacation, massage, workout],\n                  },\n                  '2020-05-26': {dots: [massage, workout]},\n                }}\n                markingType={'multi-dot'}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tabStyle: {\n    backgroundColor: 'rgb(255, 79, 82)',\n    borderColor: 'rgb(255, 79, 82)',\n  },\n  tabTextStyle: {\n    color: 'white',\n    padding: 10,\n  },\n  activeTabStyle: {\n    backgroundColor: 'rgb(255, 79, 82)',\n  },\n  activeTabTextStyle: {\n    borderBottomWidth: 2,\n    borderBottomColor: '#fff',\n  },\n  activeTabTextStyle_iOS: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  listContainer: {\n    paddingBottom: 105,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n  }\n});\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}