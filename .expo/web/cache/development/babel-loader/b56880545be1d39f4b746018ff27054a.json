{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/subhrajyotichakraborty/Desktop/Work_Personal/JS/todos/src/screens/CreateNotes.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ColorMeter from \"./ColorMeter\";\n\nvar CreateNotes = function (_Component) {\n  _inherits(CreateNotes, _Component);\n\n  var _super = _createSuper(CreateNotes);\n\n  function CreateNotes(props) {\n    var _this;\n\n    _classCallCheck(this, CreateNotes);\n\n    _this = _super.call(this, props);\n\n    _this.selectedColorPalette = function (colorName) {\n      console.log(colorName);\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CreateNotes, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.notesContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.notesCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.notesTitle,\n        placeholder: \"Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.notesDescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.notesInput,\n        multiline: true,\n        placeholder: \"Description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }\n      })), React.createElement(ColorMeter, {\n        getSelectedColorPalette: this.selectedColorPalette,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: styles.btnContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.doneBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.doneBtnText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }\n      }, \"Done\"))))));\n    }\n  }]);\n\n  return CreateNotes;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 15,\n    marginVertical: 20\n  },\n  notesContainer: {\n    padding: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.30,\n    shadowRadius: 4.65,\n    elevation: 8,\n    backgroundColor: \"#fff\",\n    borderRadius: 3\n  },\n  notesTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  notesCard: {},\n  notesDescription: {},\n  notesInput: {\n    marginTop: 5,\n    marginBottom: 30,\n    fontSize: 18\n  },\n  btnContainer: {\n    marginVertical: 30\n  },\n  doneBtn: {\n    padding: 15,\n    backgroundColor: 'rgb(146, 65, 255)',\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  doneBtnText: {\n    color: \"white\",\n    fontSize: 18\n  }\n});\nexport default CreateNotes;","map":{"version":3,"sources":["/Users/subhrajyotichakraborty/Desktop/Work_Personal/JS/todos/src/screens/CreateNotes.js"],"names":["React","Component","ColorMeter","CreateNotes","props","selectedColorPalette","colorName","console","log","state","styles","container","notesContainer","notesCard","notesTitle","notesDescription","notesInput","btnContainer","doneBtn","doneBtnText","StyleSheet","create","paddingHorizontal","marginVertical","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","backgroundColor","borderRadius","fontSize","fontWeight","marginTop","marginBottom","alignItems","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {View, Text, StyleSheet, TouchableOpacity, TextInput} from \"react-native\";\n\nimport ColorMeter from \"./ColorMeter\";\n\nclass CreateNotes extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    selectedColorPalette = (colorName) => {\n        console.log(colorName); \n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <View style={styles.notesContainer}>\n                    <View style={styles.notesCard}>\n                        <View>\n                            <TextInput style={styles.notesTitle} placeholder=\"Title\" />\n                        </View>\n                        <View style={styles.notesDescription}>\n                            <TextInput style={styles.notesInput} multiline placeholder=\"Description\" />\n                        </View>\n                        <ColorMeter getSelectedColorPalette={this.selectedColorPalette} />\n                        <View style={styles.btnContainer}>\n                            <TouchableOpacity style={styles.doneBtn}>\n                                <Text style={styles.doneBtnText}>Done</Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                </View>\n            </View>\n        );\n    };\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        paddingHorizontal: 15,\n        marginVertical: 20\n    },\n    notesContainer: {\n        padding: 20,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.30,\n        shadowRadius: 4.65,\n\n        elevation: 8,\n        backgroundColor: \"#fff\",\n        borderRadius: 3\n    },\n    notesTitle: {\n        fontSize: 18,\n        fontWeight: \"bold\"\n    },\n    notesCard: {},\n    notesDescription: {},\n    notesInput: {\n        marginTop: 5,\n        marginBottom: 30,\n        fontSize: 18,\n    },\n    btnContainer: {\n        marginVertical: 30,\n    },\n    doneBtn: {\n        padding: 15,\n        backgroundColor: 'rgb(146, 65, 255)',\n        borderRadius: 10,\n        alignItems: 'center',\n    },\n    doneBtnText: {\n        color: \"white\",\n        fontSize: 18\n    }\n});\n\nexport default CreateNotes;\n\n\n"]},"metadata":{},"sourceType":"module"}